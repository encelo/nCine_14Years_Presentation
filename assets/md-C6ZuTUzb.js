import{_ as o}from"./slidev/CodeBlockWrapper.vue_vue_type_script_setup_true_lang-Dk2eK6Zq.js";import{b as h,o as d,w as t,g as e,C as i,e as k,m as p,v as u,x as c,D as l}from"./modules/vue-DVoBR_Gt.js";import{I as g}from"./slidev/default-hbptgzU_.js";import{u as m,f}from"./slidev/context-MNQvXT2D.js";import"./modules/unplugin-icons-C1_kl-kH.js";import"./index-DezL4xne.js";import"./modules/shiki-BFBYwPGf.js";const x={__name:"nCine.md__slidev_24",setup(B){const{$clicksContext:a,$frontmatter:r}=m();return a.setup(),(A,s)=>{const n=o;return d(),h(g,u(c(l(f)(l(r),23))),{default:t(()=>[s[2]||(s[2]=e("h2",null,"ðŸ’Š 2018 - OpenGL 3.3 Renderer (1/2)",-1)),s[3]||(s[3]=e("ul",null,[e("li",null,[i("Update to OpenGL 3.3 Core Profile and OpenGL ES 3.0 "),e("ul",null,[e("li",null,[e("code",null,"KHR_debug"),i(" extension ("),e("code",null,"glDebugMessageCallback()"),i(", "),e("code",null,"glPushDebugGroup()"),i(", "),e("code",null,"glObjectLabel()"),i(")")]),e("li",null,"Pool of Vertex Array Objects (VAO) to change VBOs and vertex formats in one bind"),e("li",null,"Uniform Buffer Objects (UBO) to supply arbitrary data to multiple shaders at once"),e("li",null,[i("Immutable texture storage to skip per-draw texture checks ("),e("code",null,"glTexStorage2D()"),i(")")])])]),e("li",null,"Rewrite the batcher to work with rendering commands (degenerete vertices, patched indices)"),e("li",null,[i("Add a "),e("code",null,"RenderBufferManager"),i(" to have one VBO/IBO/UBO for all the data in the scene "),e("ul",null,[e("li",null,[e("code",null,"GL_MAP_WRITE_BIT | GL_MAP_INVALIDATE_BUFFER_BIT | GL_MAP_FLUSH_EXPLICIT_BIT | GL_MAP_UNSYNCHRONIZED_BIT"),i(" (TODO: short explanation, code, flowchart?)")])])]),e("li",null,"Add mesh sprites with custom vertices and UV coordinates")],-1)),e("figure",null,[k(n,p({},{title:"",ranges:[]}),{default:t(()=>s[0]||(s[0]=[e("pre",{class:"shiki shiki-themes vitesse-dark vitesse-light slidev-code",style:{"--shiki-dark":"#dbd7caee","--shiki-light":"#393a34","--shiki-dark-bg":"#121212","--shiki-light-bg":"#ffffff"}},[e("code",{class:"language-glsl"},[e("span",{class:"line"},[e("span",{style:{"--shiki-dark":"#758575DD","--shiki-light":"#A0ADA0"}},"    // Should split if the lower part of a material's sort key or the primitive type differ")]),i(`
`),e("span",{class:"line"},[e("span",{style:{"--shiki-dark":"#CB7676","--shiki-light":"#AB5959"}},"    const"),e("span",{style:{"--shiki-dark":"#CB7676","--shiki-light":"#AB5959"}}," bool"),e("span",{style:{"--shiki-dark":"#DBD7CAEE","--shiki-light":"#393A34"}}," shouldSplit "),e("span",{style:{"--shiki-dark":"#666666","--shiki-light":"#999999"}},"="),e("span",{style:{"--shiki-dark":"#DBD7CAEE","--shiki-light":"#393A34"}}," command"),e("span",{style:{"--shiki-dark":"#CB7676","--shiki-light":"#AB5959"}},"->"),e("span",{style:{"--shiki-dark":"#80A665","--shiki-light":"#59873A"}},"lowerMaterialSortKey"),e("span",{style:{"--shiki-dark":"#666666","--shiki-light":"#999999"}},"()"),e("span",{style:{"--shiki-dark":"#CB7676","--shiki-light":"#AB5959"}}," !="),e("span",{style:{"--shiki-dark":"#DBD7CAEE","--shiki-light":"#393A34"}}," prevCommand"),e("span",{style:{"--shiki-dark":"#CB7676","--shiki-light":"#AB5959"}},"->"),e("span",{style:{"--shiki-dark":"#80A665","--shiki-light":"#59873A"}},"lowerMaterialSortKey"),e("span",{style:{"--shiki-dark":"#666666","--shiki-light":"#999999"}},"()"),e("span",{style:{"--shiki-dark":"#CB7676","--shiki-light":"#AB5959"}}," ||")]),i(`
`),e("span",{class:"line"},[e("span",{style:{"--shiki-dark":"#DBD7CAEE","--shiki-light":"#393A34"}},"                             prevPrimitive "),e("span",{style:{"--shiki-dark":"#CB7676","--shiki-light":"#AB5959"}},"!="),e("span",{style:{"--shiki-dark":"#DBD7CAEE","--shiki-light":"#393A34"}}," primitive"),e("span",{style:{"--shiki-dark":"#666666","--shiki-light":"#999999"}},";")])])],-1)])),_:1,__:[0]},16),s[1]||(s[1]=e("figcaption",{class:"left"},[i(" Split condition for a batch of render commands."),e("br"),i(" Sort key hashes layers (upper 32 bits), textures, shaders, and blending factors data. "),e("br"),i(" From "),e("a",{href:"https://github.com/nCine/nCine/blob/master/src/graphics/RenderBatcher.cpp"},[e("code",null,"src/graphics/RenderBatcher.cpp"),i("ðŸ”—")])],-1))])]),_:1,__:[2,3]},16)}}};export{x as default};
